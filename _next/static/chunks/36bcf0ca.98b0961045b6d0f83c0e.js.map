{"version":3,"sources":["webpack://_N_E/./node_modules/chart.js/dist/chart.esm.js"],"names":["animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","grouped","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","layouts","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","Chart","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","releaseContext","toDataURL","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","ArcElement","chartX","chartY","halfAngle","halfRadius","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","pointStyle","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","configurable","d","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","step","precision","maxDigits","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","pathRadiusLine","getPointPosition","numberOrZero","param","logarithmic","RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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","file":"static/chunks/36bcf0ca.98b0961045b6d0f83c0e.js","sourcesContent":["/*!\n * Chart.js v3.2.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.2.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents)) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    me._listeners = {};\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks, maxDigits, horizontal} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / maxDigits;\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal()\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}