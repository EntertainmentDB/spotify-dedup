{"version":3,"sources":["webpack://_N_E/./dedup/playlistCache.ts","webpack://_N_E/./dedup/oauthManager.ts","webpack://_N_E/./dedup/library.ts","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://_N_E/./components/reviews.js","webpack://_N_E/./dedup/promiseForPages.ts","webpack://_N_E/./components/features.js","webpack://_N_E/./node_modules/next/link.js","webpack://_N_E/./components/bmc.tsx","webpack://_N_E/./components/footer.js","webpack://_N_E/../../client/link.tsx","webpack://_N_E/./node_modules/react-i18next/dist/es/Translation.js","webpack://_N_E/./components/main.tsx","webpack://_N_E/./dedup/process.ts","webpack://_N_E/./node_modules/@babel/runtime/regenerator/index.js","webpack://_N_E/./components/languageSelector.js","webpack://_N_E/./dedup/oauthConfig.ts","webpack://_N_E/./components/intro.js","webpack://_N_E/./dedup/deduplicator.ts","webpack://_N_E/./components/pages/index.js","webpack://_N_E/./dedup/customFetch.ts","webpack://_N_E/./dedup/spotifyApi.ts"],"names":["PlaylistCache","playlist","localStorage","getItem","snapshot_id","e","setItem","obtainToken","options","Promise","resolve","reject","authWindow","pollAuthWindowClosed","window","addEventListener","receiveMessage","event","clearInterval","origin","OAuthConfig","host","close","removeEventListener","data","message","left","screen","width","top","height","params","client_id","clientId","redirect_uri","redirectUri","response_type","scopes","scope","join","open","obj","parts","i","hasOwnProperty","push","encodeURIComponent","toQueryString","setInterval","closed","fetchUserOwnedPlaylists","api","userId","a","promisesForPages","getUserPlaylists","limit","pages","reduce","array","currentPage","concat","items","filter","owner","id","asyncGeneratorStep","gen","_next","_throw","key","arg","info","value","error","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_arrayLikeToArray","arr","len","length","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","useTranslation","t","i18n","href","stripParameters","indexOf","substr","fetchGeneric","offset","getGeneric","fetchPageWithDefaults","result","console","fill","next","previous","total","initialRequest","results","promises","Math","ceil","prev","_","currentIndex","previousPromise","currentPromise","bind","dangerouslySetInnerHTML","__html","strongOpen","strongClose","linkGithubOpen","linkGithubClose","linkWebApiOpen","linkWebApiClose","module","exports","style","paddingTop","target","onClick","global","src","alt","marginLeft","linkOpen","linkClose","listeners","IntersectionObserver","prefetched","listenToIntersections","el","observer","cachedObserver","entries","entry","cb","rootMargin","prefetch","isLocalURL","router","props","p","React","pathname","resolvedHref","resolveHref","as","childElm","children","child","Children","childProps","ref","setChildElm","nodeName","isModifiedEvent","scroll","replace","shallow","success","document","linkClicked","priority","addBasePath","Translation","ns","_useTranslation","_useTranslation2","ready","lng","language","Status","toProcess","Main","playlists","savedTracks","status","duplicates","index","state","findIndex","playlistModel","collaborative","PlaylistDeduplicator","removeDuplicates","playlistsCopy","setState","captureMessage","extra","process","Process","on","user","SavedTracksDeduplicator","totalDuplicates","current","count","removeDuplicatesInSavedTracks","map","duplicate","reason","trackName","track","trackArtistName","artists","images","url","Component","playlistCache","playlistToPlaylistModel","processed","onPlaylistProcessed","remaining","currentState","dispatch","playlistsToCheck","ownedPlaylists","getTracks","getMySavedTracks","findDuplicatedTracks","needsCheckForDuplicates","playlistTracks","storePlaylistWithoutDuplicates","forEach","callback","exec","onLoginClick","xmlns","marginRight","verticalAlign","transform","d","BaseDeduplicator","model","tracks","seenIds","seenNameAndArtist","isDuplicate","seenNameAndArtistKey","toLowerCase","duration","abs","duration_ms","pagePromises","all","page","item","tracksToRemove","uri","linked_from","positions","reverse","chunk","splice","removeTracksFromPlaylist","promise","func","removeFromMySavedTracks","MetaHead","content","rel","AvailableLanguages","hrefLang","Index","isLoggedIn","OAuthManager","accessToken","SpotifyWebApi","setAccessToken","getMe","className","handleLoginClick","retries","timeoutBetweenFailingRequests","min","max","queue","ongoingFetch","execute","shouldRetry","fetch","response","setTimeout","random","tryToExecute","shift","fetchParams","customFetch","apiPrefix","NetworkException","ServerException","json","ApplicationException","InvalidJSONException","body","parseAPIResponse","text","responseBody","parsedJSON","JSON","parse","ok","token","optionsString","keys","k","method","headers","Authorization","res","playlistId","uris","dataToBeSent","stringify","trackIds"],"mappings":"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","file":"static/chunks/9162518ee998bb5faff3b8d2d90ab1fccb66ccc2.087f95d804bce7584767.js","sourcesContent":["import { SpotifyPlaylistType } from './spotifyApi';\nconst SNAPSHOT_VERSION = 'v1';\nexport default class PlaylistCache {\n  needsCheckForDuplicates(playlist: SpotifyPlaylistType) {\n    if ('snapshot_id' in playlist) {\n      try {\n        if (localStorage.getItem(playlist.snapshot_id) === SNAPSHOT_VERSION) {\n          return false;\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n    return true;\n  }\n\n  storePlaylistWithoutDuplicates(playlist: SpotifyPlaylistType) {\n    if ('snapshot_id' in playlist) {\n      try {\n        localStorage.setItem(playlist.snapshot_id, SNAPSHOT_VERSION);\n      } catch (e) {}\n    }\n  }\n}\n","import OAuthConfig from './oauthConfig';\n\nfunction toQueryString(obj: { [key: string]: string }) {\n  const parts = [];\n  for (const i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      parts.push(`${encodeURIComponent(i)}=${encodeURIComponent(obj[i])}`);\n    }\n  }\n  return parts.join('&');\n}\n\nfunction obtainToken(options?: { scopes: Array<string> }) {\n  const promise = new Promise((resolve, reject) => {\n    let authWindow = null;\n    let pollAuthWindowClosed = null;\n\n    function receiveMessage(event: { origin: string; data: unknown }) {\n      clearInterval(pollAuthWindowClosed);\n      if (event.origin !== OAuthConfig.host) {\n        reject({\n          message: `Origin ${event.origin} does not match ${OAuthConfig.host}`,\n        });\n        return;\n      }\n      if (authWindow !== null) {\n        authWindow.close();\n        authWindow = null;\n      }\n\n      window.removeEventListener('message', receiveMessage, false);\n\n      // todo: manage case when the user rejects the oauth\n      // or the oauth fails to obtain a token\n      resolve(event.data);\n    }\n\n    window.addEventListener('message', receiveMessage, false);\n\n    const width = 400;\n    const height = 600;\n    const left = screen.width / 2 - width / 2;\n    const top = screen.height / 2 - height / 2;\n\n    type Parameters = {\n      client_id: string;\n      redirect_uri: string;\n      response_type: string;\n      scope?: string;\n    };\n\n    const params: Parameters = {\n      client_id: OAuthConfig.clientId,\n      redirect_uri: OAuthConfig.redirectUri,\n      response_type: 'token',\n    };\n\n    if (options.scopes) {\n      params.scope = options.scopes.join(' ');\n    }\n\n    authWindow = window.open(\n      `https://accounts.spotify.com/authorize?${toQueryString(params)}`,\n      'Spotify',\n      `menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=${width}, height=${height}, top=${top}, left=${left}`\n    );\n\n    pollAuthWindowClosed = setInterval(() => {\n      if (authWindow !== null) {\n        if (authWindow.closed) {\n          clearInterval(pollAuthWindowClosed);\n          reject({ message: 'access_denied' });\n        }\n      }\n    }, 1000);\n  });\n\n  return promise;\n}\n\nexport default { obtainToken };\n","import promisesForPages from './promiseForPages';\nimport SpotifyWebApi from './spotifyApi';\n\nexport const fetchUserOwnedPlaylists = async (\n  api: SpotifyWebApi,\n  userId: string\n) => {\n  const pages = await promisesForPages(\n    api,\n    api.getUserPlaylists(userId, { limit: 50 })\n  );\n\n  return pages.reduce(\n    (array, currentPage) =>\n      array.concat(\n        currentPage.items.filter(\n          (playlist) => playlist && playlist.owner.id === userId\n        )\n      ),\n    []\n  );\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default () => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div>\n      <p className=\"header\">{t('reviews.title')}</p>\n      <ul className=\"quotes\">\n        <li>\n          <blockquote>\n            I just discovered your @Spotify dedup web app & it is awesome!!!\n            Recommend to all #Spotify users! –\n            <a href=\"https://twitter.com/VanKenton\">@VanKenton</a>\n          </blockquote>\n        </li>\n        <li>\n          <blockquote>\n            @jmperezperez I've been using your spotify dedup code for years.\n            Today, I finally decided to check out your other stuff. Amazing! I\n            can't believe it took me this long to discover it –\n            <a href=\"https://twitter.com/wormx\">@wormx</a>\n          </blockquote>\n        </li>\n        <li>\n          <blockquote>\n            Thanks for the Spotify De-Dup! Very helpful and extremely easy to\n            use. – <a href=\"https://www.buymeacoffee.com/jmp\">PTR</a>\n          </blockquote>\n        </li>\n      </ul>\n      <style jsx>\n        {`\n          .header {\n            font-weight: bold;\n            font-size: 2rem;\n            margin-top: 2rem;\n            line-height: 1.1;\n            text-align: center;\n          }\n          .quotes {\n            list-style: none;\n          }\n\n          ul {\n            padding: 0;\n          }\n          blockquote {\n            background: var(--card-bg-color);\n            border-left: 10px solid var(--accent-color);\n            margin: 1.5em 10px;\n            padding: 0.5em 10px;\n          }\n\n          blockquote p {\n            display: inline;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n","/**\n * Promise for pages is an util function to concat all the\n * results for requests that require pagination from Spotify's Web API\n *\n */\n\nimport SpotifyWebApi from './spotifyApi';\n\ntype PaginableResultType = {\n  items: Array<any>;\n  href: string;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  total: number;\n};\n\nfunction stripParameters(href: string) {\n  return href.indexOf('?') !== -1 ? href.substr(0, href.indexOf('?')) : href;\n}\n\nasync function fetchGeneric(\n  api: SpotifyWebApi,\n  href: string,\n  offset: number,\n  limit: number\n) {\n  return api.getGeneric(\n    `${stripParameters(href)}?offset=${offset}&limit=${limit}`\n  );\n}\n\nasync function fetchPageWithDefaults(\n  api: SpotifyWebApi,\n  href: string,\n  offset: number,\n  limit: number\n) {\n  let result: PaginableResultType = null;\n\n  try {\n    result = (await fetchGeneric(\n      api,\n      href,\n      offset,\n      limit\n    )) as PaginableResultType;\n  } catch (e) {\n    // Fetching this page of results failed. We fill the chunk with null elements as a fallback.\n    // todo: report this in the UI somehow\n    console.error(\n      `Error making request to fetch tracks from ${href} with offset ${offset} and limit ${limit}`,\n      e\n    );\n    result = {\n      items: new Array(limit).fill(null),\n      href,\n      offset,\n      limit,\n      next: null,\n      previous: null,\n      total: null,\n    };\n  }\n  return result;\n}\n\nexport default async function promisesForPages(\n  api: SpotifyWebApi,\n  initialRequest\n): Promise<Array<any>> {\n  const results = await initialRequest;\n  if (results === null) {\n    return [];\n  }\n  const { limit, total, offset, href } = results;\n  if (total === 0) {\n    return Promise.resolve([]);\n  }\n  const promises = new Array(Math.ceil((total - limit - offset) / limit))\n    .fill('')\n    .reduce(\n      (prev, _, currentIndex) => {\n        prev.push(() =>\n          fetchPageWithDefaults(\n            api,\n            href,\n            limit + offset + currentIndex * limit,\n            limit\n          )\n        );\n        return prev;\n      },\n      [() => initialRequest]\n    );\n\n  // resolve promises sequentially\n  // https://stackoverflow.com/questions/24586110/resolve-promises-one-after-another-i-e-in-sequence\n  return promises.reduce(\n    (previousPromise, currentPromise) =>\n      previousPromise\n        .then((result: Array<Object>) =>\n          currentPromise()\n            .then(Array.prototype.concat.bind(result))\n            .catch((e) => {\n              console.error('There was an error reducing promises', e);\n            })\n        )\n        .catch((e) => {\n          console.error(\n            'There was an error reducing promises - general catch',\n            e\n          );\n        }),\n    Promise.resolve([])\n  );\n}\n","import React, { Component } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default () => {\n  const { t, i18n } = useTranslation();\n  return (\n    <div className=\"row marketing cols-3\">\n      <div>\n        <h4>{t('features.find-remove.header')}</h4>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: t('features.find-remove.body', {\n              strongOpen: '<strong>',\n              strongClose: '</strong>',\n            }),\n          }}\n        />\n      </div>\n      <div>\n        <h4>{t('features.safer.header')}</h4>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: t('features.safer.body', {\n              strongOpen: '<strong>',\n              strongClose: '</strong>',\n            }),\n          }}\n        />\n      </div>\n      <div>\n        <h4>{t('features.open-source.header')}</h4>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: t('features.open-source.body', {\n              linkGithubOpen:\n                '<strong><a href=\"https://github.com/JMPerez/spotify-dedup/\">',\n              linkGithubClose: '</a></strong>',\n              linkWebApiOpen:\n                '<a href=\"https://developer.spotify.com/web-api/\">',\n              linkWebApiClose: '</a>',\n            }),\n          }}\n        />\n      </div>\n      <style jsx>\n        {`\n          .row {\n            margin-right: -15px;\n            margin-left: -15px;\n          }\n          .marketing {\n            padding-left: 15px;\n            padding-right: 15px;\n          }\n          .row:after,\n          .row:before {\n            display: table;\n            content: ' ';\n          }\n          .row:after {\n            clear: both;\n          }\n          h4 {\n            font-size: 18px;\n            line-height: 1.1;\n            margin-top: 10px;\n            margin-bottom: 10px;\n          }\n          .cols-3 > div {\n            flex: 1;\n            padding-right: 15px;\n            padding-left: 15px;\n            padding-bottom: 4px;\n          }\n          @media (min-width: 768px) {\n            .cols-3 {\n              display: flex;\n              flex-wrap: wrap;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n","module.exports = require('./dist/client/link')\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default () => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div style={{ paddingTop: '1em' }}>\n      <a\n        className=\"bmc-button\"\n        target=\"_blank\"\n        href=\"https://www.buymeacoffee.com/jmp\"\n        onClick={() => {\n          global['fbq'] && global['fbq']('track', 'InitiateCheckout');\n          global['ga'] &&\n            global['ga']('send', 'event', 'spotify-dedup', 'bmc-clicked');\n        }}\n      >\n        <img\n          src=\"https://www.buymeacoffee.com/assets/img/BMC-btn-logo.svg\"\n          width=\"25\"\n          height=\"35\"\n          alt=\"\"\n        />\n        <span style={{ marginLeft: '5px' }}>{t('bmc.button')}</span>\n      </a>\n      <style jsx>\n        {`\n          .bmc-button {\n            line-height: 36px;\n            height: 37px;\n            text-decoration: none;\n            display: inline-flex;\n            color: #fff;\n            background-color: #ff813f;\n            border-radius: 3px;\n            border: 1px solid transparent;\n            padding: 0 9px;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default () => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"footer\">\n      <p>\n        <span\n          dangerouslySetInnerHTML={{\n            __html: t('footer.author', {\n              linkOpen:\n                '<a target=\"_blank\" rel=\"noopener\" href=\"https://jmperezperez.com\">',\n              linkClose: '</a>',\n            }),\n          }}\n        />{' '}\n        ·{' '}\n        <span\n          dangerouslySetInnerHTML={{\n            __html: t('footer.github', {\n              linkOpen:\n                '<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/JMPerez/spotify-dedup/\">',\n              linkClose: '</a>',\n            }),\n          }}\n        />\n        ·{' '}\n        <span\n          dangerouslySetInnerHTML={{\n            __html: t('footer.bmc', {\n              linkOpen:\n                '<a target=\"_blank\" rel=\"noopener\" href=\"https://www.buymeacoffee.com/jmp\">',\n              linkClose: '</a>',\n            }),\n          }}\n        />\n      </p>\n      <style jsx>\n        {`\n          .footer {\n            padding-top: 15px;\n            padding-left: 15px;\n            padding-right: 15px;\n            color: var(--secondary-text-color);\n            text-align: center;\n          }\n          span {\n            white-space: nowrap;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n","import React, { Children } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  PrefetchOptions,\n  NextRouter,\n  isLocalURL,\n} from '../next-server/lib/router/router'\nimport { execOnce } from '../next-server/lib/utils'\nimport { useRouter } from './router'\nimport { addBasePath, resolveHref } from '../next-server/lib/router/router'\n\ntype Url = string | UrlObject\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n}\n\nlet cachedObserver: IntersectionObserver\nconst listeners = new Map<Element, () => void>()\nconst IntersectionObserver =\n  typeof window !== 'undefined' ? window.IntersectionObserver : null\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction getObserver(): IntersectionObserver | undefined {\n  // Return shared instance of IntersectionObserver if already created\n  if (cachedObserver) {\n    return cachedObserver\n  }\n\n  // Only create shared IntersectionObserver if supported in browser\n  if (!IntersectionObserver) {\n    return undefined\n  }\n\n  return (cachedObserver = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (!listeners.has(entry.target)) {\n          return\n        }\n\n        const cb = listeners.get(entry.target)!\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          cachedObserver.unobserve(entry.target)\n          listeners.delete(entry.target)\n          cb()\n        }\n      })\n    },\n    { rootMargin: '200px' }\n  ))\n}\n\nconst listenToIntersections = (el: Element, cb: () => void) => {\n  const observer = getObserver()\n  if (!observer) {\n    return () => {}\n  }\n\n  observer.observe(el)\n  listeners.set(el, cb)\n  return () => {\n    try {\n      observer.unobserve(el)\n    } catch (err) {\n      console.error(err)\n    }\n    listeners.delete(el)\n  }\n}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options?: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') return\n  if (!isLocalURL(href)) return\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n  // Join on an invalid URI character\n  prefetched[href + '%' + as] = true\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  const { target } = event.currentTarget as HTMLAnchorElement\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean\n): void {\n  const { nodeName } = e.currentTarget\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  //  avoid scroll for urls with anchor refs\n  if (scroll == null) {\n    scroll = as.indexOf('#') < 0\n  }\n\n  // replace state instead of push if prop is present\n  router[replace ? 'replace' : 'push'](href, as, { shallow }).then(\n    (success: boolean) => {\n      if (!success) return\n      if (scroll) {\n        window.scrollTo(0, 0)\n        document.body.focus()\n      }\n    }\n  )\n}\n\nfunction Link(props: React.PropsWithChildren<LinkProps>) {\n  if (process.env.NODE_ENV !== 'production') {\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = React.useRef(false)\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true\n      console.warn(\n        'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n      )\n    }\n  }\n  const p = props.prefetch !== false\n\n  const [childElm, setChildElm] = React.useState<Element>()\n\n  const router = useRouter()\n  const pathname = (router && router.pathname) || '/'\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = resolveHref(pathname, props.href)\n    return {\n      href: resolvedHref,\n      as: props.as ? resolveHref(pathname, props.as) : resolvedHref,\n    }\n  }, [pathname, props.href, props.as])\n\n  React.useEffect(() => {\n    if (\n      p &&\n      IntersectionObserver &&\n      childElm &&\n      childElm.tagName &&\n      isLocalURL(href)\n    ) {\n      // Join on an invalid URI character\n      const isPrefetched = prefetched[href + '%' + as]\n      if (!isPrefetched) {\n        return listenToIntersections(childElm, () => {\n          prefetch(router, href, as)\n        })\n      }\n    }\n  }, [p, childElm, href, as, router])\n\n  let { children, replace, shallow, scroll } = props\n  // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n  if (typeof children === 'string') {\n    children = <a>{children}</a>\n  }\n\n  // This will return the first child, if multiple are provided it will throw an error\n  const child: any = Children.only(children)\n  const childProps: {\n    onMouseEnter?: React.MouseEventHandler\n    onClick: React.MouseEventHandler\n    href?: string\n    ref?: any\n  } = {\n    ref: (el: any) => {\n      if (el) setChildElm(el)\n\n      if (child && typeof child === 'object' && child.ref) {\n        if (typeof child.ref === 'function') child.ref(el)\n        else if (typeof child.ref === 'object') {\n          child.ref.current = el\n        }\n      }\n    },\n    onClick: (e: React.MouseEvent) => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e)\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll)\n      }\n    },\n  }\n\n  if (p) {\n    childProps.onMouseEnter = (e: React.MouseEvent) => {\n      if (!isLocalURL(href)) return\n      if (child.props && typeof child.props.onMouseEnter === 'function') {\n        child.props.onMouseEnter(e)\n      }\n      prefetch(router, href, as, { priority: true })\n    }\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (props.passHref || (child.type === 'a' && !('href' in child.props))) {\n    childProps.href = addBasePath(as)\n  }\n\n  return React.cloneElement(child, childProps)\n}\n\nif (process.env.NODE_ENV === 'development') {\n  const warn = execOnce(console.error)\n\n  // This module gets removed by webpack.IgnorePlugin\n  const PropTypes = require('prop-types')\n  const exact = require('prop-types-exact')\n  // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.\n  Link.propTypes = exact({\n    href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    prefetch: PropTypes.bool,\n    replace: PropTypes.bool,\n    shallow: PropTypes.bool,\n    passHref: PropTypes.bool,\n    scroll: PropTypes.bool,\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      (props: any, propName: string) => {\n        const value = props[propName]\n\n        if (typeof value === 'string') {\n          warn(\n            `Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>`\n          )\n        }\n\n        return null\n      },\n    ]).isRequired,\n  })\n}\n\nexport default Link\n","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { useTranslation } from './useTranslation';\nexport function Translation(props) {\n  var ns = props.ns,\n      children = props.children,\n      options = _objectWithoutProperties(props, [\"ns\", \"children\"]);\n\n  var _useTranslation = useTranslation(ns, options),\n      _useTranslation2 = _slicedToArray(_useTranslation, 3),\n      t = _useTranslation2[0],\n      i18n = _useTranslation2[1],\n      ready = _useTranslation2[2];\n\n  return children(t, {\n    i18n: i18n,\n    lng: i18n.language\n  }, ready);\n}","import React from 'react';\nimport { useTranslation, Translation } from 'react-i18next';\nimport { PlaylistModel } from '../dedup/types';\nimport { SpotifyUserType, SpotifyTrackType } from '../dedup/spotifyApi';\n\nimport Process from '../dedup/process';\nimport {\n  PlaylistDeduplicator,\n  SavedTracksDeduplicator,\n} from '../dedup/deduplicator';\n\nimport Badge from './badge';\nimport BuyMeACoffee from './bmc';\nimport Panel from './panel';\nimport { DuplicateTrackList } from './duplicateTrackList';\nimport { DuplicateTrackListItem } from './duplicateTrackListItem';\n\nconst Status = ({ toProcess }) => {\n  const { t } = useTranslation();\n  return (\n    <span>\n      <h3>\n        {toProcess > 0 || toProcess === null\n          ? t('process.status.finding')\n          : t('process.status.complete')}\n      </h3>\n      <style jsx>\n        {`\n          h3 {\n            font-size: 24px;\n          }\n        `}\n      </style>\n    </span>\n  );\n};\n\ntype StateType = {\n  toProcess?: number;\n  playlists: Array<PlaylistModel>;\n  savedTracks: {\n    status?: string;\n    duplicates: Array<{\n      index: number;\n      reason: string;\n      track: SpotifyTrackType;\n    }>;\n  };\n};\n\nexport default class Main extends React.Component<{\n  api: any;\n  user: SpotifyUserType;\n}> {\n  state: StateType = {\n    toProcess: null,\n    playlists: [],\n    savedTracks: {\n      status: null,\n      duplicates: [],\n    },\n  };\n\n  componentDidMount() {\n    const process = new Process();\n    process.on('updateState', (state) => {\n      this.setState(state);\n    });\n    process.process(this.props.api, this.props.user);\n  }\n\n  removeDuplicates = (playlist: PlaylistModel) => {\n    (async () => {\n      const index = this.state.playlists.findIndex(\n        (p) => p.playlist.id === playlist.playlist.id\n      );\n      const playlistModel = this.state.playlists[index];\n      if (playlistModel.playlist.id === 'starred') {\n        global['alert'] &&\n          global['alert'](\n            'It is not possible to delete duplicates from your Starred playlist using this tool since this is not supported in the Spotify Web API. You will need to remove these manually.'\n          );\n      }\n      if (playlistModel.playlist.collaborative) {\n        global['alert'] &&\n          global['alert'](\n            'It is not possible to delete duplicates from a collaborative playlist using this tool since this is not supported in the Spotify Web API. You will need to remove these manually.'\n          );\n      } else {\n        try {\n          await PlaylistDeduplicator.removeDuplicates(\n            this.props.api,\n            playlistModel\n          );\n          const playlistsCopy = [...this.state.playlists];\n          playlistsCopy[index].duplicates = [];\n          playlistsCopy[index].status = 'process.items.removed';\n          this.setState({ ...this.state, playlists: [...playlistsCopy] });\n          if (global['ga']) {\n            global['ga'](\n              'send',\n              'event',\n              'spotify-dedup',\n              'playlist-removed-duplicates'\n            );\n          }\n        } catch (e) {\n          global['Raven'] &&\n            global['Raven'].captureMessage(\n              `Exception trying to remove duplicates from playlist`,\n              {\n                extra: {\n                  duplicates: playlistModel.duplicates,\n                },\n              }\n            );\n        }\n      }\n    })();\n  };\n\n  removeDuplicatesInSavedTracks() {\n    (async () => {\n      await SavedTracksDeduplicator.removeDuplicates(\n        this.props.api,\n        this.state.savedTracks\n      );\n      this.setState({\n        ...this.state,\n        savedTracks: {\n          duplicates: [],\n          status: 'process.items.removed',\n        },\n      });\n      if (global['ga']) {\n        global['ga'](\n          'send',\n          'event',\n          'spotify-dedup',\n          'saved-tracks-removed-duplicates'\n        );\n      }\n    })();\n  }\n\n  render() {\n    const totalDuplicates =\n      this.state.playlists.length === 0\n        ? 0\n        : this.state.playlists.reduce(\n            (prev, current) => prev + current.duplicates.length,\n            0\n          ) + this.state.savedTracks.duplicates.length;\n    return (\n      <div>\n        <Status toProcess={this.state.toProcess} />\n        <Panel>\n          {this.state.toProcess === null && (\n            <Translation>{(t) => t('process.reading-library')}</Translation>\n          )}\n          {this.state.toProcess > 0 && (\n            <Translation>\n              {(t) => t('process.processing', { count: this.state.toProcess })}\n            </Translation>\n          )}\n          {this.state.toProcess === 0 && totalDuplicates > 0 && (\n            <span>\n              <Translation>\n                {(t) => t('process.status.complete.body')}\n              </Translation>{' '}\n              <Translation>\n                {(t) => (\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: t('process.status.complete.dups.body', {\n                        strongOpen: '<strong>',\n                        strongClose: '</strong>',\n                      }),\n                    }}\n                  />\n                )}\n              </Translation>\n              <BuyMeACoffee />\n            </span>\n          )}\n          {this.state.toProcess === 0 && totalDuplicates === 0 && (\n            <span>\n              <Translation>\n                {(t) => t('process.status.complete.body')}\n              </Translation>\n              <br />\n              <Translation>\n                {(t) => t('process.status.complete.nodups.body')}\n              </Translation>\n              <BuyMeACoffee />\n            </span>\n          )}\n        </Panel>\n\n        <ul className=\"playlists-list\">\n          {(this.state.savedTracks.duplicates.length ||\n            this.state.savedTracks.status) && (\n            <li className=\"playlists-list-item media\">\n              <div className=\"img\">\n                <img\n                  width=\"100\"\n                  height=\"100\"\n                  className=\"playlists-list-item__img\"\n                  src={'./placeholder.png'}\n                />\n              </div>\n              <div className=\"bd\">\n                <span className=\"playlists-list-item__name\">\n                  <Translation>{(t) => t('process.saved.title')}</Translation>\n                </span>\n                {this.state.savedTracks.status && (\n                  <Badge>\n                    <Translation>\n                      {(t) => t(this.state.savedTracks.status)}\n                    </Translation>\n                  </Badge>\n                )}\n                {this.state.savedTracks.duplicates.length != 0 && (\n                  <span>\n                    <span>\n                      <Translation>\n                        {(t) =>\n                          t('process.saved.duplicates', {\n                            count: this.state.savedTracks.duplicates.length,\n                          })\n                        }\n                      </Translation>\n                    </span>\n                    <button\n                      className=\"btn btn-primary btn-sm playlist-list-item__btn\"\n                      onClick={() => this.removeDuplicatesInSavedTracks()}\n                    >\n                      <Translation>\n                        {(t) => t('process.saved.remove-button')}\n                      </Translation>\n                    </button>\n                    <DuplicateTrackList>\n                      {this.state.savedTracks.duplicates.map(\n                        (duplicate, index) => (\n                          <DuplicateTrackListItem\n                            key={index}\n                            reason={duplicate.reason}\n                            trackName={duplicate.track.name}\n                            trackArtistName={duplicate.track.artists[0].name}\n                          />\n                        )\n                      )}\n                    </DuplicateTrackList>\n                  </span>\n                )}\n              </div>\n            </li>\n          )}\n          {this.state.playlists\n            .filter((p) => p.duplicates.length || p.status != '')\n            .map((playlist: PlaylistModel, index) => (\n              <li className=\"playlists-list-item media\" key={index}>\n                <div className=\"img\">\n                  <img\n                    width=\"100\"\n                    height=\"100\"\n                    className=\"playlists-list-item__img\"\n                    src={\n                      playlist.playlist.images &&\n                      playlist.playlist.images[0] &&\n                      playlist.playlist.images[0].url\n                    }\n                  />\n                </div>\n                <div className=\"bd\">\n                  <span className=\"playlists-list-item__name\">\n                    {playlist.playlist.name}\n                  </span>\n                  {playlist.status && (\n                    <Badge>\n                      <Translation>{(t) => t(playlist.status)}</Translation>\n                    </Badge>\n                  )}\n                  {playlist.duplicates.length != 0 && (\n                    <span>\n                      <span>\n                        <Translation>\n                          {(t) =>\n                            t('process.playlist.duplicates', {\n                              count: playlist.duplicates.length,\n                            })\n                          }\n                        </Translation>\n                      </span>\n                      <button\n                        className=\"btn btn-primary btn-sm playlist-list-item__btn\"\n                        onClick={() => this.removeDuplicates(playlist)}\n                      >\n                        <Translation>\n                          {(t) => t('process.playlist.remove-button')}\n                        </Translation>\n                      </button>\n                      <DuplicateTrackList>\n                        {playlist.duplicates.map((duplicate, index) => (\n                          <DuplicateTrackListItem\n                            key={index}\n                            reason={duplicate.reason}\n                            trackName={duplicate.track.name}\n                            trackArtistName={duplicate.track.artists[0].name}\n                          />\n                        ))}\n                      </DuplicateTrackList>\n                    </span>\n                  )}\n                </div>\n              </li>\n            ))}\n        </ul>\n        <style jsx>\n          {`\n            .bd {\n              position: relative;\n            }\n\n            .media,\n            .bd {\n              overflow: hidden;\n              _overflow: visible;\n              zoom: 1;\n            }\n\n            .media .img {\n              float: left;\n              margin-right: 20px;\n            }\n\n            img {\n              vertical-align: middle;\n            }\n\n            .playlists-list-item {\n              margin-bottom: 2rem;\n            }\n\n            .playlists-list-item__img {\n              width: 100px;\n            }\n\n            .btn {\n              background-image: none;\n              border: 1px solid transparent;\n              border-radius: 4px;\n              cursor: pointer;\n              display: inline-block;\n              font-size: 14px;\n              font-weight: 400;\n              line-height: 1.428571429;\n              margin-bottom: 0;\n              padding: 6px 12px;\n              text-align: center;\n              vertical-align: middle;\n              white-space: nowrap;\n            }\n\n            .btn-primary {\n              background-color: #428bca;\n              border-color: #357ebd;\n              color: #fff;\n            }\n\n            .btn-primary:hover {\n              background-color: #5094ce;\n            }\n\n            .playlist-list-item__btn {\n              max-width: 50%;\n              position: absolute;\n              right: 0;\n              top: 0;\n            }\n\n            @media (max-width: 700px) {\n              .playlist-list-item__btn {\n                max-width: 100%;\n                position: relative;\n              }\n            }\n\n            .playlists-list-item__name {\n              display: block;\n              font-weight: bold;\n              max-width: 50%;\n            }\n\n            ul {\n              padding: 0;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n","import { fetchUserOwnedPlaylists } from './library';\nimport { PlaylistDeduplicator, SavedTracksDeduplicator } from './deduplicator';\nimport PlaylistCache from './playlistCache';\nimport { PlaylistModel } from './types';\nimport SpotifyWebApi, {\n  SpotifyUserType,\n  SpotifyPlaylistType,\n  SpotifyTrackType,\n} from './spotifyApi';\n\nconst playlistCache = new PlaylistCache();\n\nconst playlistToPlaylistModel = (\n  playlist: SpotifyPlaylistType\n): PlaylistModel => ({\n  playlist: playlist,\n  duplicates: [],\n  status: '',\n  processed: false,\n});\n\nexport default class {\n  listeners: {};\n  constructor() {\n    this.listeners = {};\n  }\n\n  on(event: string, fn) {\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push(fn);\n  }\n\n  dispatch(event: string, params) {\n    const callbacks = this.listeners[event];\n    callbacks.forEach((callback) => callback(params));\n  }\n\n  process = async (api: SpotifyWebApi, user: SpotifyUserType) => {\n    const currentState: {\n      playlists?: Array<PlaylistModel>;\n      savedTracks?: {\n        duplicates?: Array<any>;\n      };\n      toProcess?: number;\n    } = {};\n\n    const dispatch = this.dispatch.bind(this);\n    function onPlaylistProcessed(playlist: PlaylistModel) {\n      playlist.processed = true;\n      var remaining = currentState.toProcess - 1;\n      currentState.toProcess -= 1;\n      if (remaining === 0) {\n        if (global['ga']) {\n          global['ga']('send', 'event', 'spotify-dedup', 'library-processed');\n        }\n        if (global['fbq']) {\n          global['fbq']('trackCustom', 'dedup-library-processed');\n        }\n      }\n      dispatch('updateState', currentState);\n    }\n\n    let playlistsToCheck = [];\n    const ownedPlaylists: Array<SpotifyPlaylistType> = await fetchUserOwnedPlaylists(\n      api,\n      user.id\n    ).catch((e) => {\n      if (global['ga']) {\n        global['ga'](\n          'send',\n          'event',\n          'spotify-dedup',\n          'error-fetching-user-playlists'\n        );\n      }\n      console.error(\"There was an error fetching user's playlists\", e);\n    });\n\n    if (ownedPlaylists) {\n      playlistsToCheck = ownedPlaylists;\n      currentState.playlists = playlistsToCheck.map((p) =>\n        playlistToPlaylistModel(p)\n      );\n      currentState.toProcess =\n        currentState.playlists.length + 1 /* saved tracks */;\n      currentState.savedTracks = {};\n      const savedTracks = await SavedTracksDeduplicator.getTracks(\n        api,\n        api.getMySavedTracks({ limit: 50 })\n      );\n      currentState.savedTracks.duplicates = SavedTracksDeduplicator.findDuplicatedTracks(\n        savedTracks\n      );\n      if (currentState.savedTracks.duplicates.length && global['ga']) {\n        global['ga'](\n          'send',\n          'event',\n          'spotify-dedup',\n          'saved-tracks-found-duplicates'\n        );\n      }\n      currentState.toProcess--;\n\n      this.dispatch('updateState', currentState);\n\n      for (const playlistModel of currentState.playlists) {\n        if (playlistCache.needsCheckForDuplicates(playlistModel.playlist)) {\n          try {\n            const playlistTracks = await PlaylistDeduplicator.getTracks(\n              api,\n              playlistModel.playlist\n            );\n            playlistModel.duplicates = PlaylistDeduplicator.findDuplicatedTracks(\n              playlistTracks\n            );\n            if (playlistModel.duplicates.length === 0) {\n              playlistCache.storePlaylistWithoutDuplicates(\n                playlistModel.playlist\n              );\n            }\n            onPlaylistProcessed(playlistModel);\n          } catch (e) {\n            console.error(\n              'There was an error fetching tracks for playlist',\n              playlistModel.playlist,\n              e\n            );\n            onPlaylistProcessed(playlistModel);\n          }\n        } else {\n          onPlaylistProcessed(playlistModel);\n        }\n      }\n    }\n  };\n}\n","module.exports = require(\"regenerator-runtime\");\n","import React from 'react';\nimport Link from 'next/link';\n\nexport default () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        Change language to{' '}\n        <Link prefetch={false} href=\"/de/\">\n          <a>German</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/\">\n          <a>English</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/es/\">\n          <a>Spanish</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/fr/\">\n          <a>French</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/it/\">\n          <a>Italian</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/nl/\">\n          <a>Dutch</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/pt/\">\n          <a>Portuguese</a>\n        </Link>\n        ,{' '}\n        <Link prefetch={false} href=\"/sv/\">\n          <a>Swedish</a>\n        </Link>\n      </p>\n      <style jsx>\n        {`\n          .footer {\n            color: var(--secondary-text-color);\n            padding-top: 15px;\n            padding-left: 15px;\n            padding-right: 15px;\n            text-align: center;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n","const clientId = '04dca0de1c4e4aca88cc615ac23581be';\nconst redirectUri =\n  'location' in global && global['location']['host'] === 'localhost:3000'\n    ? 'http://localhost:3000/callback'\n    : 'https://spotify-dedup.com/callback/';\n\nconst host = /http[s]?:\\/\\/[^/]+/.exec(redirectUri)[0];\n\nexport default {\n  clientId,\n  redirectUri,\n  host,\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport default (props) => {\n  const { t, i18n } = useTranslation();\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <h1>{t('home.title')}</h1>\n        <p className=\"lead\">{t('home.description')}</p>\n        <p>\n          <button\n            className=\"btn btn-jumbotron btn-success\"\n            onClick={props.onLoginClick}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              height=\"168\"\n              width=\"168\"\n              style={{\n                width: '26px',\n                height: '26px',\n                marginRight: '10px',\n                verticalAlign: '-6px',\n              }}\n            >\n              <g transform=\"scale(0.15)\">\n                <path\n                  fill=\"#ffffff\"\n                  d=\"M83.996.277C37.747.277.253 37.77.253 84.019c0 46.251 37.494 83.741 83.743 83.741 46.254 0 83.744-37.49 83.744-83.741 0-46.246-37.49-83.738-83.745-83.738l.001-.004zm38.404 120.78a5.217 5.217 0 0 1-7.18 1.73c-19.662-12.01-44.414-14.73-73.564-8.07a5.222 5.222 0 0 1-6.249-3.93 5.213 5.213 0 0 1 3.926-6.25c31.9-7.291 59.263-4.15 81.337 9.34 2.46 1.51 3.24 4.72 1.73 7.18zm10.25-22.805c-1.89 3.075-5.91 4.045-8.98 2.155-22.51-13.839-56.823-17.846-83.448-9.764-3.453 1.043-7.1-.903-8.148-4.35a6.538 6.538 0 0 1 4.354-8.143c30.413-9.228 68.222-4.758 94.072 11.127 3.07 1.89 4.04 5.91 2.15 8.976v-.001zm.88-23.744c-26.99-16.031-71.52-17.505-97.289-9.684-4.138 1.255-8.514-1.081-9.768-5.219a7.835 7.835 0 0 1 5.221-9.771c29.581-8.98 78.756-7.245 109.83 11.202a7.823 7.823 0 0 1 2.74 10.733c-2.2 3.722-7.02 4.949-10.73 2.739z\"\n                />\n              </g>\n            </svg>\n            {t('home.login-button')}\n          </button>\n        </p>\n      </div>\n      <style jsx>\n        {`\n          .lead {\n            margin-bottom: 20px;\n            font-size: 16px;\n            font-weight: 200;\n            line-height: 1.4;\n          }\n          .jumbotron {\n            padding: 30px;\n            margin-bottom: 16px;\n            font-size: 21px;\n            font-weight: 200;\n            line-height: 2.1428571435;\n            text-align: center;\n          }\n          h1 {\n            line-height: 1;\n            margin-top: 20px;\n            margin-bottom: 10px;\n          }\n\n          @media (min-width: 768px) {\n            h1 {\n              font-size: 63px;\n            }\n            .lead {\n              font-size: 21px;\n            }\n            .jumbotron {\n              padding: 30px;\n              margin-bottom: 30px;\n            }\n          }\n\n          .jumbotron p {\n            line-height: 1.4;\n          }\n\n          .btn {\n            display: inline-block;\n            padding: 6px 12px;\n            margin-bottom: 0;\n            font-size: 14px;\n            font-weight: 400;\n            line-height: 1.428571429;\n            text-align: center;\n            white-space: nowrap;\n            vertical-align: middle;\n            background-image: none;\n            border: 0;\n            border-radius: 4px;\n            font-size: 21px;\n            padding: 14px 24px;\n            cursor: pointer;\n          }\n          .btn-jumbotron {\n            font-size: 21px;\n            padding: 14px 24px;\n            line-height: 1.33;\n            border-radius: 6px;\n          }\n          .btn-success {\n            color: #fff;\n            background-color: #3a833a;\n          }\n          .btn-success:hover {\n            background-color: #327132;\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n","import promisesForPages from './promiseForPages';\nimport SpotifyWebApi, {\n  SpotifyTrackType,\n  SpotifyPlaylistType,\n  SpotifyPlaylistTrackType,\n  SpotifySavedTrackType,\n} from './spotifyApi';\nimport { PlaylistModel } from './types';\n\nclass BaseDeduplicator {\n  async removeDuplicates(model) {\n    throw 'Not implemented';\n  }\n\n  async getTracks() {\n    throw 'Not implemented';\n  }\n\n  static findDuplicatedTracks(tracks: Array<SpotifyTrackType>) {\n    const seenIds: { [key: string]: boolean } = {};\n    const seenNameAndArtist: { [key: string]: Array<number> } = {};\n    const result = tracks.reduce((duplicates, track, index) => {\n      if (track === null) return duplicates;\n      if (track.id === null) return duplicates;\n      let isDuplicate = false;\n      const seenNameAndArtistKey = `${track.name}:${track.artists[0].name}`.toLowerCase();\n      if (track.id in seenIds) {\n        // if the two tracks have the same Spotify ID, they are duplicates\n        isDuplicate = true;\n      } else {\n        // if they have the same name, main artist, and roughly same duration\n        // we consider tem duplicates too\n        if (seenNameAndArtistKey in seenNameAndArtist) {\n          // we check if _any_ of the previous durations is similar to the one we are checking\n          if (\n            seenNameAndArtist[seenNameAndArtistKey].filter(\n              (duration) => Math.abs(duration - track.duration_ms) < 2000\n            ).length !== 0\n          ) {\n            isDuplicate = true;\n          }\n        }\n      }\n      if (isDuplicate) {\n        duplicates.push({\n          index: index,\n          track: track,\n          reason: track.id in seenIds ? 'same-id' : 'same-name-artist',\n        });\n      } else {\n        seenIds[track.id] = true;\n        seenNameAndArtist[seenNameAndArtistKey] =\n          seenNameAndArtist[seenNameAndArtistKey] || [];\n        seenNameAndArtist[seenNameAndArtistKey].push(track.duration_ms);\n      }\n      return duplicates;\n    }, []);\n    return result;\n  }\n}\n\nexport class PlaylistDeduplicator extends BaseDeduplicator {\n  static async getTracks(\n    api: SpotifyWebApi,\n    playlist: SpotifyPlaylistType\n  ): Promise<Array<SpotifyTrackType>> {\n    return new Promise((resolve, reject) => {\n      const tracks = [];\n      promisesForPages(\n        api,\n        api.getGeneric(playlist.tracks.href) // 'https://api.spotify.com/v1/users/11153223185/playlists/0yygtDHfwC7uITHxfrcQsF/tracks'\n      )\n        .then((\n          pagePromises // todo: I'd love to replace this with\n        ) =>\n          // .then(Promise.all)\n          // à la http://www.html5rocks.com/en/tutorials/es6/promises/#toc-transforming-values\n          Promise.all(pagePromises)\n        )\n        .then((pages) => {\n          pages.forEach((page) => {\n            page.items.forEach((item: SpotifyPlaylistTrackType) => {\n              tracks.push(item && item.track);\n            });\n          });\n          resolve(tracks);\n        })\n        .catch(reject);\n    });\n  }\n\n  static async removeDuplicates(\n    api: SpotifyWebApi,\n    playlistModel: PlaylistModel\n  ) {\n    return new Promise((resolve, reject) => {\n      if (playlistModel.playlist.id === 'starred') {\n        reject(\n          'It is not possible to delete duplicates from your Starred playlist using this tool since this is not supported in the Spotify Web API. You will need to remove these manually.'\n        );\n      }\n      if (playlistModel.playlist.collaborative) {\n        reject(\n          'It is not possible to delete duplicates from a collaborative playlist using this tool since this is not supported in the Spotify Web API. You will need to remove these manually.'\n        );\n      } else {\n        const tracksToRemove = playlistModel.duplicates\n          .map((d) => ({\n            uri: d.track.linked_from ? d.track.linked_from.uri : d.track.uri,\n            positions: [d.index],\n          }))\n          .reverse(); // reverse so we delete the last ones first\n        const promises = [];\n        do {\n          const chunk = tracksToRemove.splice(0, 100);\n          (function (playlistModel, chunk, api) {\n            promises.push(() =>\n              api.removeTracksFromPlaylist(\n                playlistModel.playlist.owner.id,\n                playlistModel.playlist.id,\n                chunk\n              )\n            );\n          })(playlistModel, chunk, api);\n        } while (tracksToRemove.length > 0);\n\n        promises\n          .reduce(\n            (promise, func) => promise.then(() => func()),\n            Promise.resolve(null)\n          )\n          .then(() => {\n            playlistModel.duplicates = [];\n            resolve();\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      }\n    });\n  }\n}\n\nexport class SavedTracksDeduplicator extends BaseDeduplicator {\n  static async getTracks(\n    api: SpotifyWebApi,\n    initialRequest\n  ): Promise<Array<SpotifyTrackType>> {\n    return new Promise((resolve, reject) => {\n      const tracks = [];\n      promisesForPages(api, initialRequest)\n        .then((\n          pagePromises // todo: I'd love to replace this with\n        ) =>\n          // .then(Promise.all)\n          // à la http://www.html5rocks.com/en/tutorials/es6/promises/#toc-transforming-values\n          Promise.all(pagePromises)\n        )\n        .then((pages) => {\n          pages.forEach((page) => {\n            page.items.forEach((item: SpotifySavedTrackType) => {\n              tracks.push(item.track);\n            });\n          });\n          resolve(tracks);\n        })\n        .catch((e) => {\n          console.error(\n            `There was an error fetching the tracks from playlist ${initialRequest.href}`,\n            e\n          );\n          reject(e);\n        });\n    });\n  }\n\n  static async removeDuplicates(\n    api: SpotifyWebApi,\n    model: {\n      duplicates: Array<{\n        index: number;\n        reason: string;\n        track: SpotifyTrackType;\n      }>;\n    }\n  ) {\n    return new Promise((resolve, reject) => {\n      const tracksToRemove: Array<string> = model.duplicates.map((d) =>\n        d.track.linked_from ? d.track.linked_from.id : d.track.id\n      );\n      do {\n        (async () => {\n          const chunk = tracksToRemove.splice(0, 50);\n          await api.removeFromMySavedTracks(chunk);\n        })();\n      } while (tracksToRemove.length > 0);\n      model.duplicates = [];\n      resolve();\n    });\n  }\n}\n","import React from 'react';\nimport Head from 'next/head';\nimport Header from '../head';\nimport Footer from '../footer';\nimport Intro from '../intro';\nimport Main from '../main';\nimport Features from '../features';\nimport Reviews from '../reviews';\nimport LanguageSelector from '../languageSelector';\n\nimport OAuthManager from '../../dedup/oauthManager';\nimport SpotifyWebApi from '../../dedup/spotifyApi';\nimport { useTranslation } from 'react-i18next';\n\nimport i18n, { AvailableLanguages } from '../../i18n';\n\nconst MetaHead = () => {\n  const { t, i18n } = useTranslation();\n  return (\n    <Head>\n      <title>{t('meta.title')}</title>\n      <meta name=\"og:title\" content={t('meta.title')} />\n      <meta name=\"twitter:title\" content={t('meta.title')} />\n      <meta name=\"description\" content={t('meta.description')} />\n      <meta name=\"og:description\" content={t('meta.description')} />\n      <meta name=\"twitter:description\" content={t('meta.description')} />\n      <meta name=\"viewport\" content=\"width=device-width\" />\n      <link\n        rel=\"canonical\"\n        href={`https://spotify-dedup.com/${\n          i18n.language === 'en' ? '' : i18n.language + '/'\n        }`}\n      />\n      {AvailableLanguages.filter((language) => language !== i18n.language).map(\n        (language) => (\n          <link\n            key={language}\n            rel=\"alternate\"\n            hrefLang={language}\n            href={\n              language === 'en'\n                ? 'https://spotify-dedup.com/'\n                : `https://spotify-dedup.com/${language}/`\n            }\n          ></link>\n        )\n      )}\n    </Head>\n  );\n};\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    isLoggedIn: false,\n    user: null,\n  };\n  api = null;\n\n  handleLoginClick = async () => {\n    const accessToken = await OAuthManager.obtainToken({\n      scopes: [\n        /*\n            the permission for reading public playlists is granted\n            automatically when obtaining an access token through\n            the user login form\n            */\n        'playlist-read-private',\n        'playlist-read-collaborative',\n        'playlist-modify-public',\n        'playlist-modify-private',\n        'user-library-read',\n        'user-library-modify',\n      ],\n    }).catch(function (error) {\n      console.error('There was an error obtaining the token', error);\n    });\n\n    if (global['ga']) {\n      global['ga']('send', 'event', 'spotify-dedup', 'user-logged-in');\n    }\n    if (global['fbq']) {\n      global['fbq']('trackCustom', 'dedup-user-logged-in');\n    }\n\n    Index.api = new SpotifyWebApi();\n    Index.api.setAccessToken(accessToken);\n\n    const user = await Index.api.getMe();\n    this.setState({ isLoggedIn: true, user });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <MetaHead />\n        <Header />\n\n        {this.state.isLoggedIn ? (\n          <Main api={Index.api} user={this.state.user} />\n        ) : (\n          <Intro onLoginClick={this.handleLoginClick} />\n        )}\n        {this.state.isLoggedIn\n          ? null\n          : [<Features key={0} />, <Reviews key={1} />]}\n        <Footer />\n        <LanguageSelector />\n      </div>\n    );\n  }\n}\n","/**\n * Custom Fetch is a fetcher that queues and retries requests\n *\n * Every time `customFetch` is called, it queues the request and it\n * gets executed when the previous ones have finalised. It also adds\n * a delay before retrying requests.\n */\n\ntype QueuedFetchType = {\n  resolve: any;\n  reject: (error: ErrorType) => void;\n  url: string;\n  options: RequestInit;\n  retries: number;\n};\n\ntype ErrorType = {\n  message: string;\n  url: string;\n  options: RequestInit;\n};\n\nconst retries = 3;\nconst timeoutBetweenFailingRequests = {\n  min: 2000,\n  max: 5000,\n};\nconst queue: Array<QueuedFetchType> = [];\nlet ongoingFetch = null;\n\nasync function execute(entry: QueuedFetchType) {\n  let shouldRetry = false;\n  try {\n    const response = await fetch(entry.url, entry.options);\n    let success = response.status < 400;\n    if (success) {\n      entry.resolve(response);\n    } else {\n      console.error('Got status ' + response.status, entry);\n      if (--entry.retries > 0) {\n        shouldRetry = true;\n      } else {\n        entry.reject({\n          message: 'Too many retries',\n          url: entry.url,\n          options: entry.options,\n        });\n      }\n    }\n  } catch (e) {\n    if (--entry.retries > 0) {\n      shouldRetry = true;\n    } else {\n      entry.reject({\n        message: e.message,\n        url: entry.url,\n        options: entry.options,\n      });\n    }\n  }\n  if (shouldRetry) {\n    setTimeout(() => {\n      execute(entry);\n    }, timeoutBetweenFailingRequests.min + Math.random() * (timeoutBetweenFailingRequests.max - timeoutBetweenFailingRequests.min));\n  }\n}\n\nasync function tryToExecute() {\n  if (!ongoingFetch && queue.length > 0) {\n    const next = queue.shift();\n    ongoingFetch = next;\n    execute(next);\n  }\n}\n\nasync function customFetch(fetchParams: {\n  url: string;\n  options?: { [key: string]: any };\n}): Promise<any> {\n  const promise = new Promise((resolve, reject) => {\n    queue.push({\n      resolve,\n      reject,\n      url: fetchParams.url,\n      options: fetchParams.options,\n      retries: retries,\n    });\n  });\n\n  // we try to execute a fetch when it gets queued\n  tryToExecute();\n\n  promise.then(() => {\n    ongoingFetch = null;\n    // we try to execute a fetch when a previous fetch has finalised\n    tryToExecute();\n  });\n\n  return promise;\n}\n\nexport default customFetch;\n","import fetch from './customFetch';\nexport type SpotifyArtistType = {\n  id: string;\n  name: string;\n};\n\nexport type SpotifyTrackType = {\n  artists: Array<SpotifyArtistType>;\n  duration_ms: number;\n  id: string;\n  linked_from: SpotifyTrackType;\n  name: string;\n  uri: string;\n};\n\nexport type SpotifyPlaylistType = {\n  collaborative: boolean;\n  id: string;\n  images?: Array<{ url: string }>;\n  name: string;\n  owner: SpotifyUserType;\n  snapshot_id?: string;\n  tracks: {\n    href: string;\n  };\n};\n\nexport type SpotifyPlaylistTrackType = {\n  added_at: string;\n  added_by: SpotifyUserType;\n  is_local: boolean;\n  track: SpotifyTrackType | null;\n};\n\nexport type SpotifySavedTrackType = {\n  added_at: string;\n  track: SpotifyTrackType | null;\n};\n\nexport type SpotifyUserType = {\n  display_name?: string;\n  href: string;\n  id: string;\n  type: 'user';\n  uri: string;\n};\n\nconst apiPrefix = 'https://api.spotify.com/v1';\n\nfunction NetworkException(message: string, status: number) {\n  this.message = message;\n  this.status = status;\n  this.name = 'NetworkException';\n}\n\nfunction ServerException(json: Object, status: number) {\n  this.message = 'There was a Server Exception';\n  this.json = json;\n  this.status = status;\n  this.name = 'ServerException';\n}\n\nfunction ApplicationException(json: Object, status: number) {\n  this.message = 'There was an Application Exception';\n  this.json = json;\n  this.status = status;\n  this.name = 'ApplicationException';\n}\n\nfunction InvalidJSONException(body: string, status: number) {\n  this.message = 'There was an Invalid JSON Exception';\n  this.body = body;\n  this.status = status;\n  this.name = 'InvalidJSONException';\n}\n\nconst parseAPIResponse = (response: Response): Object =>\n  new Promise((resolve) => resolve(response.text()))\n    .catch((err) => {\n      throw new NetworkException(err.message, response.status);\n    })\n    .then((responseBody: string) => {\n      let parsedJSON: Object = null;\n      try {\n        parsedJSON = responseBody === '' ? null : JSON.parse(responseBody);\n      } catch (e) {\n        // We should never get these unless response is mangled\n        // Or API is not properly implemented\n        throw new InvalidJSONException(responseBody, response.status);\n      }\n      if (response.ok) return parsedJSON;\n      if (response.status >= 500) {\n        throw new ServerException(parsedJSON, response.status);\n      } else {\n        throw new ApplicationException(parsedJSON, response.status);\n      }\n    });\n\nexport default class SpotifyWebApi {\n  token: string;\n\n  constructor() {\n    this.token = null;\n  }\n\n  setAccessToken(token: string) {\n    this.token = token;\n  }\n\n  async getMe() {\n    return await this.getGeneric(`${apiPrefix}/me`);\n  }\n\n  async getGeneric(url: string, options = {}) {\n    const optionsString =\n      Object.keys(options).length === 0\n        ? ''\n        : `?${Object.keys(options)\n            .map((k) => `${k}=${options[k]}`)\n            .join('&')}`;\n\n    try {\n      const res = await fetch({\n        url: `${url}${optionsString}`,\n        options: {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${this.token}`,\n          },\n        },\n      });\n      return parseAPIResponse(res);\n    } catch (e) {\n      console.error('e', e);\n      return Promise.reject(e);\n    }\n  }\n\n  async getUserPlaylists(userId: string, options?: { limit?: number }) {\n    const url =\n      typeof userId === 'string'\n        ? `${apiPrefix}/users/${encodeURIComponent(userId)}/playlists`\n        : `${apiPrefix}/me/playlists`;\n    return await this.getGeneric(url, options);\n  }\n\n  async removeTracksFromPlaylist(\n    userId: string,\n    playlistId: string,\n    uris: Array<string | { uri: string; positions: number[] }>\n  ) {\n    const dataToBeSent = {\n      tracks: uris.map((uri) => (typeof uri === 'string' ? { uri: uri } : uri)),\n    };\n\n    const res = await fetch({\n      url: `${apiPrefix}/users/${encodeURIComponent(\n        userId\n      )}/playlists/${playlistId}/tracks`,\n      options: {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${this.token}`,\n        },\n        body: JSON.stringify(dataToBeSent),\n      },\n    });\n    return parseAPIResponse(res);\n  }\n\n  async getMySavedTracks(options?: { limit?: number }) {\n    return this.getGeneric(`${apiPrefix}/me/tracks`, options);\n  }\n\n  async removeFromMySavedTracks(trackIds: Array<string>) {\n    const res = await fetch({\n      url: `${apiPrefix}/me/tracks`,\n      options: {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${this.token}`,\n        },\n        body: JSON.stringify(trackIds),\n      },\n    });\n    return parseAPIResponse(res);\n  }\n}\n"],"sourceRoot":""}