{"version":3,"sources":["webpack://_N_E/./node_modules/chart.js/dist/chart.esm.js"],"names":["animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","getMatchingVisibleMetas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","grouped","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","animated","spanGaps","maxGapLength","directUpdate","prevParsed","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","same","other","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","layouts","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","setContext","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","edgeOpts","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","Chart","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","unbindEvents","releaseContext","toDataURL","_add","_remove","events","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","pathArc","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","ArcElement","chartX","chartY","halfAngle","halfRadius","translate","drawArc","previous","pathVars","segment","pathSegment","lineMethod","stepped","tension","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","strokePath","Path2D","path","_path","LineElement","_points","_segments","_pointsUpdated","segments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","vm","lineCap","borderCapStyle","borderJoinStyle","setStyle","inRange$1","hitRadius","capBezierPoints","cubicInterpolationMode","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","o","parseBorderWidth","borderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addRoundedRectPath","rect","addNormalRectPath","pointStyle","BarElement","addRectPath","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","d","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","measureText","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","rtl","titleColor","fillText","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","leftForLtr","multiKeyBackground","strokeRect","xPlus","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","step","precision","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","generateTicks$1","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","backdropPadding","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","pathRadiusLine","labelCount","getPointPosition","numberOrZero","param","logarithmic","RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","backdropColor","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","showLabelBackdrop","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","interpolate","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable"],"mappings":"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","file":"static/chunks/36bcf0ca.80c343fe4a599b0bd73a.js","sourcesContent":["/*!\n * Chart.js v3.0.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (isObject(layout.pos)) {\n    return {same: false, other: false};\n  }\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: edgeOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {datasets: [], labels: []};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = data;\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.0.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin, options} = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {value: data});\n    }\n  });\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const subs = _boundSegments(target, bounds);\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  ctx.fillStyle = color;\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {source: src, target: tgt, start, end} = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n    if (!source || source.fill === false) {\n      return;\n    }\n    const target = getTarget(source);\n    const {line, scale} = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {above = color, below = color} = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {line, target, above, below, area, scale});\n      unclipArea(ctx);\n    }\n  },\n  defaults: {\n    propagate: true\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}